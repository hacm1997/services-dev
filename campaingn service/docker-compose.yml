version: '3.7'
services:
  dynamodb:
    image:  amazon/dynamodb-local
    container_name: my-dynamodb
    hostname: dynamodb
    restart: always
    volumes:
      -  ./my-dynamodb-data:/home/dynamodblocal/data
    ports:
      - 8000:8000
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath . "
  opensearchnode1: # This is also the hostname of the container within the Docker network (i.e. https://opensearchnode1/)
    image: opensearchproject/opensearch:latest
    container_name: opensearchnode1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearchnode1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearchnode1,opensearchnode2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearchnode1,opensearchnode2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
      - "OPENSEARCH_PLUGINS=opensearch-sql" # ENABLED SQL PLUGIN
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearchnode1-data1:/usr/sharbece46a21c8d0386ca6028330f3bddf50c17b612f86d1c29c660b44f627c0d77e/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearchnode2:
    image: opensearchproject/opensearch:latest # This should be the same image used for opensearchnode1 to avoid issues
    container_name: opensearchnode2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearchnode2
      - discovery.seed_hosts=opensearchnode1,opensearchnode2
      - cluster.initial_cluster_manager_nodes=opensearchnode1,opensearchnode2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
      # ENABLED SQL PLUGIN
      - "OPENSEARCH_PLUGINS=opensearch-sql"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearchnode2-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearchdashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearchdashboards matches the version of opensearch installed on other nodes
    container_name: opensearchdashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearchnode1:9200","http://opensearchnode2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
      - "OPENSEARCH_PLUGINS=opensearch-sql"

    networks:
      - opensearch-net

volumes:
  opensearchnode1-data1:
  opensearchnode2-data2:

networks:
  opensearch-net: